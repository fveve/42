• Un container Docker contenant NGINX avec TLSv1.2 ou TLSv1.3 uniquement.
• Un container Docker contenant WordPress + php-fpm (installé et configuré) uniquement sans nginx.
• Un container Docker contenant MariaDB uniquement sans nginx.
• Un volume contenant votre base de données WordPress.
• Un second volume contenant les fichiers de votre site WordPress.
• Un docker-network qui fera le lien entre vos containers
Chaque image Docker devra obligatoirement porter le même nom que le service
concerné.
Chaque service devra tourner dans un container dédié.

L’utilisation de network: host ou --link ou encore links: est bien
entendu interdite. 
La ligne network(s) doit être présente dans
votre fichier docker-compose.yml.
Vos containers ne doivent pas être
démarrés avec une commande faisant tourner une boucle infinie.
Cela concerne donc aussi les commandes utilisées comme entrypoint, dont celles qui sont dans un script. 
Exemples de "hacky patch" interdits :
taif -f, bash, sleep infinity, while true, etc. ...

Renseignez-vous sur les bonnes pratiques d’écriture de Dockerfiles et
le "PID 1".

Deux utilisateurs seront présents dans votre base de données WordPress, l’un d’eux
étant le compte Admin. L’username de l’Admin ne devra pas comporter "admin"
ou "Admin" (exemples : admin, administrator, administrateur, administratrice,
admin-123, etc. ...).

Vos volumes seront disponibles dans le dossier /home/login/data de la
machine hôte utilisant Docker. Bien entendu, remplacez le "login" par
le vôtre.

Pour des questions de lisibilité, il faudra configurer votre nom de domaine afin qu’il
pointe vers votre adresse IP locale.
Ce nom de domaine sera login.42.fr. A nouveau, vous utiliserez votre login.
Par exemple, si votre login est wil, wil.42.fr redirigera vers l’adresse IP pointant vers
le site web de wil.

Le tag latest est interdit.
Aucun mot de passe ne doit être présent dans vos Dockerfiles.
L’utilisation des variables d’environnement est obligatoire.
La mise en place d’un fichier .env afin de stocker vos variables
d’environnement est fortement conseillée et l’utilisation de Docker
secrets pour stocker toute information confidentielle est fortement
recommandée.
Votre container NGINX doit être le seul point d’entrée de votre
infrastructure par le port 443 uniquement en utilisant le protocole
TLSv1.2 ou TLSv1.3.

------------------------------------------------------------------------------------------------------------
Voici un exemple de structure attendue dans votre rendu :
$> ls -alR

total XX
drwxrwxr-x 3 wil wil 4096 avril 42 20:42 .
drwxrwxrwt 17 wil wil 4096 avril 42 20:42 ..
-rw-rw-r-- 1 wil wil XXXX avril 42 20:42 Makefile
drwxrwxr-x 3 wil wil 4096 avril 42 20:42 secrets
drwxrwxr-x 3 wil wil 4096 avril 42 20:42 srcs

./secrets:
total XX
drwxrwxr-x 2 wil wil 4096 avril 42 20:42 .
drwxrwxr-x 6 wil wil 4096 avril 42 20:42 ..
-rw-r--r-- 1 wil wil XXXX avril 42 20:42 credentials.txt
-rw-r--r-- 1 wil wil XXXX avril 42 20:42 db_password.txt
-rw-r--r-- 1 wil wil XXXX avril 42 20:42 db_root_password.txt

./srcs:
total XX
drwxrwxr-x 3 wil wil 4096 avril 42 20:42 .
drwxrwxr-x 3 wil wil 4096 avril 42 20:42 ..
-rw-rw-r-- 1 wil wil XXXX avril 42 20:42 docker-compose.yml
-rw-rw-r-- 1 wil wil XXXX avril 42 20:42 .env
drwxrwxr-x 5 wil wil 4096 avril 42 20:42 requirements

./srcs/requirements:
total XX
drwxrwxr-x 5 wil wil 4096 avril 42 20:42 .
drwxrwxr-x 3 wil wil 4096 avril 42 20:42 ..
drwxrwxr-x 4 wil wil 4096 avril 42 20:42 bonus
drwxrwxr-x 4 wil wil 4096 avril 42 20:42 mariadb
drwxrwxr-x 4 wil wil 4096 avril 42 20:42 nginx
drwxrwxr-x 4 wil wil 4096 avril 42 20:42 tools
drwxrwxr-x 4 wil wil 4096 avril 42 20:42 wordpress

./srcs/requirements/mariadb:
total XX
drwxrwxr-x 4 wil wil 4096 avril 42 20:45 .
drwxrwxr-x 5 wil wil 4096 avril 42 20:42 ..
drwxrwxr-x 2 wil wil 4096 avril 42 20:42 conf
-rw-rw-r-- 1 wil wil XXXX avril 42 20:42 Dockerfile
-rw-rw-r-- 1 wil wil XXXX avril 42 20:42 .dockerignore
drwxrwxr-x 2 wil wil 4096 avril 42 20:42 tools
[...]

./srcs/requirements/nginx:
total XX
drwxrwxr-x 4 wil wil 4096 avril 42 20:42 .
drwxrwxr-x 5 wil wil 4096 avril 42 20:42 ..
drwxrwxr-x 2 wil wil 4096 avril 42 20:42 conf
-rw-rw-r-- 1 wil wil XXXX avril 42 20:42 Dockerfile
-rw-rw-r-- 1 wil wil XXXX avril 42 20:42 .dockerignore
drwxrwxr-x 2 wil wil 4096 avril 42 20:42 tools
[...]

$> cat srcs/.env

DOMAIN_NAME=wil.42.fr
# MYSQL SETUP
MYSQL_USER=XXXXXXXXXXXX
[...]
$>

------------------------------------------------------------------------------------------------------------
Pour des raisons évidentes de sécurité, tous les identifiants, clés
API, variables env etc... doivent être enregistrées localement de
différentes façons / fichiers et ignorées par git. Les informations
d’identification stockées publiquement vous conduiront directement à
un échec du projet.


Vous pouvez stocker vos variables (comme un nom de domaine) dans un
fichier .env